apiVersion: karpenter.sh/v1alpha5
kind: Provisioner
metadata:
  name: default
spec:
  labels:
    provisionerType: fleet
  limits:
    resources:
      cpu: "300"
      memory: 750Gi
  providerRef:
    name: default
  requirements:
    - key: "karpenter.k8s.aws/instance-category"
      operator: In
      values: ["c", "m", "r", "t"]
    - key: "kubernetes.io/arch"
      operator: In
      values: ["amd64"]
    - key: "karpenter.sh/capacity-type"
      operator: In
      values: ["spot", "on-demand"]
    - key: kubernetes.io/os
      operator: In
      values:
        - linux
  ttlSecondsAfterEmpty: 30
---
apiVersion: karpenter.sh/v1alpha5
kind: Provisioner
metadata:
  name: pgo-only
spec:
  labels:
    provisionerType: postgres-operator
    pingidentity.com/pgo: "true"
  limits:
    resources:
      cpu: "24"
      memory: 50Gi
  providerRef:
    name: pgo-only
  requirements:
    - key: "karpenter.k8s.aws/instance-category"
      operator: In
      values: ["c", "m", "r", "t"]
    - key: "kubernetes.io/arch"
      operator: In
      values: ["amd64"]
    - key: "karpenter.sh/capacity-type"
      operator: In
      values: ["spot", "on-demand"]
    - key: kubernetes.io/os
      operator: In
      values:
        - linux
  taints:
    - effect: NoSchedule
      key: pingidentity.com/pgo-only
      value: "true"
  ttlSecondsAfterEmpty: 30
---
apiVersion: karpenter.sh/v1alpha5
kind: Provisioner
metadata:
  name: pd-only
spec:
  labels:
    provisionerType: pingdirectory
    pingidentity.com/pd: "true"
  limits:
    resources:
      cpu: "60"
      memory: 500Gi
  providerRef:
    name: pd-only
  requirements:
    - key: "karpenter.k8s.aws/instance-category"
      operator: In
      values: ["c", "m", "r", "t"]
    - key: "kubernetes.io/arch"
      operator: In
      values: ["amd64"]
    - key: "karpenter.sh/capacity-type"
      operator: In
      values: ["spot", "on-demand"]
    - key: kubernetes.io/os
      operator: In
      values:
        - linux
  taints:
    - effect: NoSchedule
      key: pingidentity.com/pd-only
      value: "true"
  ttlSecondsAfterEmpty: 30
---
apiVersion: karpenter.k8s.aws/v1alpha1
kind: AWSNodeTemplate
metadata:
  name: default
spec:
  detailedMonitoring: true
  metadataOptions:
    httpEndpoint: enabled
    httpProtocolIPv6: disabled
    httpPutResponseHopLimit: 2
    httpTokens: required
  blockDeviceMappings:
    - deviceName: /dev/xvda
      ebs:
        volumeSize: 40Gi
        volumeType: gp3
        encrypted: true
  tags:
    KarpenerProvisionerName: "default"
    managed-by: "karpenter"
---
apiVersion: karpenter.k8s.aws/v1alpha1
kind: AWSNodeTemplate
metadata:
  name: pd-only
spec:
  detailedMonitoring: true
  metadataOptions:
    httpEndpoint: enabled
    httpProtocolIPv6: disabled
    httpPutResponseHopLimit: 2
    httpTokens: required
  blockDeviceMappings:
    - deviceName: /dev/xvda
      ebs:
        volumeSize: 40Gi
        volumeType: gp3
        encrypted: true
  tags:
    KarpenerProvisionerName: "pd-only"
    managed-by: "karpenter"
---
apiVersion: karpenter.k8s.aws/v1alpha1
kind: AWSNodeTemplate
metadata:
  name: pgo-only
spec:
  detailedMonitoring: true
  metadataOptions:
    httpEndpoint: enabled
    httpProtocolIPv6: disabled
    httpPutResponseHopLimit: 2
    httpTokens: required
  blockDeviceMappings:
    - deviceName: /dev/xvda
      ebs:
        volumeSize: 40Gi
        volumeType: gp3
        encrypted: true
  tags:
    KarpenerProvisionerName: "pgo-only"
    managed-by: "karpenter"
